#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
  exclude_unpublished
  create_archives
end

compile '/posts/*' do
  filter :octopress_img_tags
  filter :redcarpet, :options => { :fenced_code_blocks => true, :smartypants => true }
  filter :fix_code_blocks
  filter :colorize_syntax, :default_colorizer => :rouge
  layout 'post'
end

route '/posts/*' do
  y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier).captures
  begin
    time = Time.parse("#{item[:created_at]}")
    y = time.year
    m = time.month.to_s.rjust(2, '0')
    d = time.day.to_s.rjust(2, '0')
  rescue
  end

  "/blog/#{y}/#{m}/#{d}/#{slug}/index.html"
end

route '/archives/*' do
  "/blog#{item.identifier}index.html"
end

compile '/feed' do
  filter :erb
end

route '/feed' do
  '/feed.atom'
end

compile '*' do
  if item[:extension] == 'md'
    filter :redcarpet, :options => { :fenced_code_blocks => true, :smartypants => true }
    filter :fix_code_blocks
    filter :colorize_syntax, :default_colorizer => :rouge
    layout 'default'
  elsif item_is_asset?(item)
    # don’t filter assets
  elsif item.binary?
    # don’t filter binary items
  else
    filter :erb
    filter :colorize_syntax, :default_colorizer => :rouge
    layout 'default'
  end
end

route '*' do
  if item_is_asset?(item)
    # don’t filter assets
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop
  elsif item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
